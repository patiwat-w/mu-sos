// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MUStrokeTriageApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250220191736_AddIdToSubjectPK")]
    partial class AddIdToSubjectPK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("SubjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("Created_Date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("First_Name");

                    b.Property<string>("HN")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("HN");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("Last_Name");

                    b.Property<DateTime>("LastSeenNormalTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("Last_Seen_Normal_Time");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("Modified_Date");

                    b.Property<DateTime>("OnsetTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("Onset_Time");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT")
                        .HasColumnName("Phone_Number");

                    b.Property<int>("StateCode")
                        .HasColumnType("INTEGER")
                        .HasColumnName("State_Code");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("Subject_ID");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("SubjectName");

                    b.HasKey("Id");

                    b.ToTable("SubjectInformation");
                });

            modelBuilder.Entity("UserAuthenticationMethodModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT")
                        .HasColumnName("DisplayName");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<string>("PhotoURL")
                        .HasColumnType("TEXT")
                        .HasColumnName("PhotoURL");

                    b.Property<int>("Provider")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Provider");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ProviderKey");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAuthenticationMethod");
                });

            modelBuilder.Entity("UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("Created_Date");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT")
                        .HasColumnName("DisplayName");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("First_Name");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastLoginDate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Last_Name");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("Modified_Date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("PhotoURL")
                        .HasColumnType("TEXT")
                        .HasColumnName("PhotoURL");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Role");

                    b.Property<int>("StateCode")
                        .HasColumnType("INTEGER")
                        .HasColumnName("State_Code");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT")
                        .HasColumnName("Token");

                    b.HasKey("Id");

                    b.ToTable("UserAccount");
                });

            modelBuilder.Entity("UserAuthenticationMethodModel", b =>
                {
                    b.HasOne("UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
